
I got tired of drawing graphs that have both directed and undirected edges. So
I wrote this simple program that reads in the adjacency matrix of a graph and
writes pstricks code to draw the graph.

The input should be a file with the number of nodes followed by the adjacency
graph. For example, Examples/mat8.txt

5
0 1 0 0 0
1 0 0 1 0
0 1 0 1 0
0 0 1 0 0
1 0 0 1 0

Simple usage:
./drawgraph < Examples/mat8.txt > Examples/mat8.tex

The program will draw undirected edges with black and directed edges will be
drawn in red with an arrow. See Examples/mat*.pdf

The program drawgraph by default reads in from standard input and writes to
standard output. You can also use -i and -o to control the input and output.
E.g.

./drawgraph -i Examples/mat8.txt -o Examples/mat8.tex


By default the program only writes the pstricks part. But, you can have it
print the pspicture environment tags with -P, or have it print the pspicture
and latex header and tail information with -H.

./drawgraph -P < Examples/mat8.txt > Examples/mat8.tex

./drawgraph -H < Examples/mat8.txt > Examples/mat8.tex

You must use latex and not pdflatex.

To draw all the example graphs:

cd Examples
for i in mat*.txt;do ../drawgraph -H < $i > ${i/txt/tex};latex ${i/txt/tex};dvipdf ${i/txt/dvi};done


The program arr2mat is a utility to convert a list of directed edges to
an adjacency matrix format.

For example, the file Example/testarrows.txt contains

5
0 1
4 2
0 3

The first line is the number of nodes in total. Each line is a
ordered pair of adjacencies. I.e. 0->1, 4->2.

The output of arr2mat can be piped directly to drawgraph.

./arr2mat < Examples/testarrows.txt | ./drawgraph -H

or

./drawgraph -H < <(./arr2mat < Examples/testarrows.txt) 
